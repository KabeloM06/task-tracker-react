{"version":3,"sources":["components/Button.js","components/Header.js","components/Task.js","components/Tasks.js","components/AddTask.js","App.js","reportWebVitals.js","index.js"],"names":["Button","color","text","onClick","style","backgroundColor","className","defaultProps","Header","title","onAdd","showAdd","Task","task","onDelete","onToggle","reminder","onDoubleClick","id","cursor","day","Tasks","tasks","map","AddTask","useState","setText","setDay","setReminder","onSubmit","e","preventDefault","alert","type","placeholder","value","onChange","target","checked","currentTarget","App","showAddTask","setShowAddTask","setTasks","Math","floor","random","newTask","length","filter","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c3737d51.chunk.js","sourcesContent":["import PropTypes from \"prop-types\"\r\n\r\nconst Button = ({ color, text, onClick}) => {\r\n    \r\n    return (\r\n        <button onClick={onClick} style={{ backgroundColor: color }} \r\n        className = \"btn\">\r\n            {text}            \r\n        </button>\r\n    )\r\n}\r\n\r\nButton.defaultProps = {\r\n    color: \"steelblue\"\r\n}\r\n\r\nButton.propTypes = {\r\n    text: PropTypes.string,\r\n    color: PropTypes.string,\r\n    onClick: PropTypes.func,\r\n}\r\n\r\nexport default Button","import PropTypes from \"prop-types\"\r\nimport Button from \"./Button\"\r\n\r\nconst Header = ({title, onAdd, showAdd}) => {\r\n    \r\n\r\n    return (\r\n        <header className = \"header\">\r\n            <h1>{title}</h1>\r\n            <Button color= \"indigo\" text={showAdd ? \"Close\" : \"Add\"} onClick = {onAdd} />\r\n            \r\n        </header>\r\n    )\r\n}\r\n\r\nHeader.defaultProps = {\r\n    title: \"Task Tracker\",\r\n}\r\n\r\nHeader.propTypes = {\r\n    title: PropTypes.string.isRequired,\r\n}\r\n\r\nexport default Header\r\n","import {FaTimes} from \"react-icons/fa\"\r\n\r\nconst Task = ({ task, onDelete, onToggle }) => {\r\n    return (\r\n        <div className = {`task ${task.reminder ? \"reminder\": \"\"}`} onDoubleClick={() => \r\n        onToggle(task.id)}>\r\n            <h3>{task.text} <FaTimes style={{color: \"red\", cursor: \"pointer\"}} onClick={() => onDelete(task.id)}/></h3>\r\n            <p>{task.day}</p>   \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Task\r\n","import Task from \"./Task\"\r\n\r\nconst Tasks = ({ tasks, onDelete, onToggle }) => {\r\n    return (\r\n        <>\r\n            {tasks.map((task) => (\r\n                <Task key={task.id} task={task} onDelete={onDelete} onToggle={onToggle} />\r\n            ) )}  \r\n        </>\r\n    )\r\n}\r\n\r\nexport default Tasks\r\n","import {useState} from \"react\"\r\n\r\nconst AddTask = ({onAdd}) => {\r\n    const [text, setText] = useState(\"\")\r\n    const [day, setDay] = useState(\"\")\r\n    const [reminder, setReminder] = useState(false)\r\n\r\n    const onSubmit = (e) => {\r\n        e.preventDefault()\r\n\r\n        if(!text) {\r\n            alert(\"Please add a task\")\r\n            return\r\n        }\r\n\r\n        onAdd({text, day, reminder})\r\n\r\n        setText(\"\")\r\n        setDay(\"\")\r\n        setReminder(false)\r\n\r\n    }\r\n    \r\n    return (\r\n        <form className=\"add-form\" onSubmit={onSubmit}>\r\n            <div className=\"form-control\">\r\n                <label>Task</label>\r\n                <input type=\"text\" placeholder=\"Add Task\" value={text} onChange={(e) => setText(e.target.value)} />\r\n            </div>\r\n            <div className=\"form-control\">\r\n                <label>Day and Time</label>\r\n                <input type=\"text\" placeholder=\"Add Task\" value={day} onChange={(e) => setDay(e.target.value)} />\r\n            </div>\r\n            <div className=\"form-control form-control-check\">\r\n                <label>Set Reminder</label>\r\n                <input type=\"checkbox\" checked={reminder} value={reminder} onChange={(e) => setReminder(e.currentTarget.checked)} />\r\n            </div>\r\n\r\n            <input type= \"submit\" value= \"Save Task\" className=\"btn btn-block\" />\r\n            \r\n        </form>\r\n    )\r\n}\r\n\r\nexport default AddTask\r\n","import { useState } from \"react\"\nimport Header from \"./components/Header\"\nimport Tasks from \"./components/Tasks\"\nimport AddTask from \"./components/AddTask\"\n\n\nfunction App() {\n  const [showAddTask, setShowAddTask] = useState(false)\n  const [tasks, setTasks] = useState ([\n    {\n        id: 1,\n        text: \"Doctors Appointment\",\n        day: \"5 February at 14:30\",\n        reminder: true,\n    },\n    {\n        id: 2,\n        text: \"Meeting at school\",\n        day: \"6 February at 13:30\",\n        reminder: true,\n    },\n    {\n        id: 3,\n        text: \"Food shopping\",\n        day: \"5 February at 14:30\",\n        reminder: false,\n    },\n])\n\n// Add Task\nconst addTask = (task) => {\n  const id = Math.floor(Math.random() * 100000) + 1\n  const newTask = {id, ...task}\n  setTasks([...tasks, newTask])\n\n}\n\n// Delete task\nconst deleteTask = (id) => {\n  setTasks(tasks.filter((task) => task.id !== id))\n}\n\n// Toggle reminder\nconst toggleReminder = (id) => {\n  setTasks(tasks.map((task) => \n  task.id === id ? {...task, reminder: !task.reminder} : task))\n}\n\n  return (\n    <div className=\"container\">\n      <Header onAdd={() => setShowAddTask(!showAddTask)} showAdd={showAddTask} />\n      {showAddTask && <AddTask onAdd={addTask}/>}\n      {tasks.length > 0 ? (\n        <Tasks tasks={tasks} onDelete= {deleteTask} onToggle={toggleReminder}/>\n      ) : (\n        \"No Tasks To Show\"\n      )}  \n    </div>\n  );\n}\n\nexport default App;\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}